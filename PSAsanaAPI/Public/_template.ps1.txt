function Verb-Noun {
    <#
    .SYNOPSIS
        Does a thing.
    .DESCRIPTION
        This function does a thing, but can do additional things when additional parameters are passed.
    .PARAMETER ID
        The Organization ID of the organization to return.
    .PARAMETER Name
        The Organization ID of the organization to return.
    .PARAMETER ReturnRaw
        Returns the raw parent object (which includes metadata like the Offset field used for pagination) instead of just the objects of the specified type.

        Standard result example:
          {
          "id": 1000,
          "name": "Task 1",
          ...
          },
          ...
        ReturnRaw result example:
          {
            "data": [
              {
              "id": 1000,
              "name": "Task 1",
              ...
              },
              ...
            ],
            "next_page": {
              "offset": "yJ0eXAiOiJKV1QiLCJhbGciOiJIRzI1NiJ9",
              "path": "/tasks?project=1337&limit=5&offset=yJ0eXAiOiJKV1QiLCJhbGciOiJIRzI1NiJ9",
              "uri": "https://app.asana.com/api/1.0/tasks?project=1337&limit=5&offset=yJ0eXAiOiJKV1QiLCJhbGciOiJIRzI1NiJ9"
            }
          }
    .OUTPUTS
        Organization object(s).
    .NOTES
        Version:        0.1
        Author:         Jason Rush
        Creation Date:  2020-04-10
        Purpose/Change: Initial script development
    .EXAMPLE
        Get-Organization
    .EXAMPLE
        Get-Organization -ID "537758"
    .EXAMPLE
        Get-Organization -Name "DevNet Sandbox"
    #>
    param (
        [CmdletBinding(
        HelpURI='https://github.com/jasonrush/PSAsanaAPI/blob/master/Docs/Verb-Noun.md',
        DefaultParameterSetName='ID',
        SupportsPaging=$false,
        PositionalBinding=$false)]

        [switch] $ReturnRaw,
        [Parameter(ParameterSetName='ID')]
        [ValidateNotNullOrEmpty()]
        [String] $ID,

        [Parameter(Mandatory=$true, ParameterSetName='Name')]
        [ValidateNotNullOrEmpty()]
        [String] $Name
    )

    # DO THINGS

    $results = Invoke-APIRestMethod -Endpoint $Endpoint

    # If -ReturnRaw parameter is passed, return raw data instead of just objects
    if( [bool]($results.PSobject.Properties.name -match "data") -and -not $ReturnRaw ) {
        $results = $results.data
    }

    # DO ADDITIONAL THINGS

    $results
}
